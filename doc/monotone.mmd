SoLoud::Monotone
===============

The SoLoud::Monotone is a replayer for MONOTONE tracker songs. MONOTONE
is a pc-speaker tracker, available on GitHub at

https://github.com/MobyGamer/MONOTONE/

The SoLoud MONOTONE replayer can play MONOTONE v1 songs (only format 
available at the time of this writing). You can pick the number of
"hardware" voices used - typically the songs are composed for a single
voice (PC beeper).

The waveform used is square wave. Other waveforms can be used by 
modifying the soloud_monotone.cpp.

Monotone.clear()
----------------

You can clear all data from the Monotone object using clear:

    void clear();
    
This is primarily used internally.


Monotone.load()
---------------

You tell monotone to load a file with the load function:

    result load(const char *aFilename, int aHardwareChannels = 1); 

Most songs are composed for a single hardware channel. SoLoud supports
up to 12 hardware channels (more can be easily added by editing soloud_monotone.cpp)

If loading fails, the function returns an error code.

    SoLoud::Monotone swingin1;
    swingin1.load("swingin1.mon");

Monotone.setLooping()
--------------------

Adjusting the looping of a monotone sound does not currently
have any effect. All music is set to loop by default. 

Monotone.setFilter()
-------------------

As with any other audio source, you can attach filters to 
monotone audio sources.

    gMusic.setFilter(0, &gLofi);

Monotone.stop()
--------------

You can stop all instances of a monotone sound source with
stop(). This is equivalent of calling soloud.stopAudioSource()
with the sound source.

    gMusic.stop();
    
Inherited 3d audio interfaces
-----------------------------
Like all other audio sources, monotone inherits the 3d audio interfaces. Please refer to the 3d audio chapter for details on:

- Monotone.set3dMinMaxDistance()
- Monotone.set3dAttenuation()
- Monotone.set3dDopplerFactor()
- Monotone.set3dProcessing()
- Monotone.set3dListenerRelative()
- Monotone.set3dDistanceDelay()
- Monotone.set3dCollider()
