Python API
==========

One of the generated glue interfaces for SoLoud is the Python API.

All of the existing interfaces can be used via the Python API, but
features that require extending SoLoud are not available.

API
---

The Python API mirrors the c++ API.

If the c++ API functions have default parameters, two functions
are generated: one without the default parameters, and one with.

The one where you can change the default parameters is post-fixed ex,
such as init and init_ex.

As an example, here's a simple example in the C++ api:

    SoLoud::Soloud soloud;
    SoLoud::Speech speech;

    speech.setText("Hello c++ api");

    soloud.init(SoLoud::Soloud::CLIP_ROUNDOFF |
                SoLoud::Soloud::ENABLE_VISUALIZATION)

    soloud.setGlobalVolume(4);
    soloud.play(speech);

    // ...

    soloud.deinit();

Converted to the "C" API, this becomes:

    import soloud

    audiolib = soloud.Soloud()
    speech = soloud.Speech()
    
    speech.set_text("Hello Python api")

    audiolib.init_ex(audiolib.CLIP_ROUNDOFF | audiolib.ENABLE_VISUALIZATION)
    audiolib.set_global_volume(4)
    audiolib.play(speech)

    # ...

    audiolib.deinit()

For cleanup, the code generator produces three functions: close, destroy and quit.
All of these perform the exact same function, and it doesn't matter which you choose.

Alternatively, you can use the SoLoud objects with the "with" syntax, which also handles cleanup, for example:

    with Soloud() as audiolib:
        audiolib.init()
        # ...
        
