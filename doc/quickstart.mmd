Quick Start
===========


Download SoLoud
---------------

First, you need to download SoLoud sources. You can find the downloads
on the <http://soloud-audio.com/download.html> page.

Add files to your project
-------------------------

You can go the lazy way and just add all of the sources to your project,
or you can copy the things you need to a single directory and include
those. You'll need the core files, and quite likely the wav files. If
you need the speech synth, include those, too.

There may be a pre-built static library that you can use. You can use 
that, too. Note that the Windows DLL only exports the "C" API, which may 
not be what you want.

There's also a premake4 script if you want to go that way.

Include files
-------------

In order to use a certain feature of SoLoud, you need to include its
include file. You might have, for instance:

    #include "soloud.h"
    #include "soloud_wav.h"

Variables
---------

You need at least the SoLoud engine core, and one or more of the sound
source variables. If you're using five different sound effect wav files,
you need five SoLoud::Wav objects. You can play one object any number of
times, even on top of each other.

Where to place these is up to you. Globals work, as do allocation from
heap, including in a class as members, etc.

    SoLoud::Soloud gSoloud;
    SoLoud::Wav gWave;

Initialize SoLoud
-----------------

In your application, once you have your framework up (for instance after your 
SDL\_Init call), include a call to initialize SoLoud.

    gSoloud.init();
    
The call has a bunch of optional parameters if you'd rather pick the replay
back-end and its parameters yourself; the default should work for most cases.

Set up sound sources
--------------------

This step varies from one sound source to another, but basically you'll
load your wave files here.

    gWave.load("pew_pew.wav");

Play sounds
-----------

Now you're ready to play the sounds. Place playing commands wherever you
need sound to be played.

    gSoloud.play(gWave);

Note that you can play the same sound several times, and it doesn't cut
itself off.

Take control of the sound
-------------------------

You can adjust various things about the sound you're playing if you take
the handle.

    int x = gSoloud.play(gWave);
    gSoloud.setPan(x, -0.2f);

Read the soloud.h header file (or this documentation) for further things
you can do.

Cleanup
-------

After you've done, remember to clean up. If you don't, the audio thread
may do stupid things while the application is shutting down.

    gSoloud.deinit();

Enjoy
-----

And you're done!
