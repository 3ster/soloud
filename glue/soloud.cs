
// SoLoud wrapper for C# (cs)
// This file is autogenerated; any changes will be overwritten

using System;
using System.Runtime.InteropServices;
using System.Text;

namespace SoLoud
{

public class SoloudObject
{
    public IntPtr objhandle;
}



public class Soloud : SoloudObject
{
	public const int WASAPI = 6;
	public const int AUTO = 0;
	public const int CLIP_ROUNDOFF = 1;
	public const int SDL2 = 2;
	public const int ENABLE_VISUALIZATION = 2;
	public const int SDL = 1;
	public const int PORTAUDIO = 3;
	public const int OPENAL = 8;
	public const int BACKEND_MAX = 9;
	public const int XAUDIO2 = 5;
	public const int WINMM = 4;
	public const int OSS = 7;

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Soloud_create();
	public Soloud()
	{
		objhandle = Soloud_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Soloud_destroy(IntPtr aObjHandle);
	~Soloud()
	{
		Soloud_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_initEx(IntPtr aObjHandle, uint aFlags, uint aBackend, uint aSamplerate, uint aBufferSize);
	public int init(uint aFlags = CLIP_ROUNDOFF, uint aBackend = AUTO, uint aSamplerate = AUTO, uint aBufferSize = AUTO)
	{
		return Soloud_initEx(objhandle, aFlags, aBackend, aSamplerate, aBufferSize);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_deinit(IntPtr aObjHandle);
	public void deinit()
	{
		Soloud_deinit(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Soloud_getVersion(IntPtr aObjHandle);
	public uint getVersion()
	{
		return Soloud_getVersion(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Soloud_getErrorString(IntPtr aObjHandle, int aErrorCode);
	public string getErrorString(int aErrorCode)
	{
		IntPtr p = Soloud_getErrorString(objhandle, aErrorCode);
		return Marshal.PtrToStringAnsi(p);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Soloud_playEx(IntPtr aObjHandle, IntPtr aSound, float aVolume, float aPan, int aPaused, uint aBus);
	public uint play(SoloudObject aSound, float aVolume = 1.0f, float aPan = 0.0f, int aPaused = 0, uint aBus = 0)
	{
		return Soloud_playEx(objhandle, aSound.objhandle, aVolume, aPan, aPaused, aBus);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Soloud_playClockedEx(IntPtr aObjHandle, double aSoundTime, IntPtr aSound, float aVolume, float aPan, uint aBus);
	public uint playClocked(double aSoundTime, SoloudObject aSound, float aVolume = 1.0f, float aPan = 0.0f, uint aBus = 0)
	{
		return Soloud_playClockedEx(objhandle, aSoundTime, aSound.objhandle, aVolume, aPan, aBus);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Soloud_play3dEx(IntPtr aObjHandle, IntPtr aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, int aPaused, uint aBus);
	public uint play3d(SoloudObject aSound, float aPosX, float aPosY, float aPosZ, float aVelX = 0.0f, float aVelY = 0.0f, float aVelZ = 0.0f, float aVolume = 1.0f, int aPaused = 0, uint aBus = 0)
	{
		return Soloud_play3dEx(objhandle, aSound.objhandle, aPosX, aPosY, aPosZ, aVelX, aVelY, aVelZ, aVolume, aPaused, aBus);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Soloud_play3dClockedEx(IntPtr aObjHandle, double aSoundTime, IntPtr aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, uint aBus);
	public uint play3dClocked(double aSoundTime, SoloudObject aSound, float aPosX, float aPosY, float aPosZ, float aVelX = 0.0f, float aVelY = 0.0f, float aVelZ = 0.0f, float aVolume = 1.0f, uint aBus = 0)
	{
		return Soloud_play3dClockedEx(objhandle, aSoundTime, aSound.objhandle, aPosX, aPosY, aPosZ, aVelX, aVelY, aVelZ, aVolume, aBus);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_seek(IntPtr aObjHandle, uint aVoiceHandle, double aSeconds);
	public void seek(uint aVoiceHandle, double aSeconds)
	{
		Soloud_seek(objhandle, aVoiceHandle, aSeconds);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_stop(IntPtr aObjHandle, uint aVoiceHandle);
	public void stop(uint aVoiceHandle)
	{
		Soloud_stop(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_stopAll(IntPtr aObjHandle);
	public void stopAll()
	{
		Soloud_stopAll(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_stopAudioSource(IntPtr aObjHandle, IntPtr aSound);
	public void stopAudioSource(SoloudObject aSound)
	{
		Soloud_stopAudioSource(objhandle, aSound.objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setFilterParameter(IntPtr aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aValue);
	public void setFilterParameter(uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aValue)
	{
		Soloud_setFilterParameter(objhandle, aVoiceHandle, aFilterId, aAttributeId, aValue);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern float Soloud_getFilterParameter(IntPtr aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId);
	public float getFilterParameter(uint aVoiceHandle, uint aFilterId, uint aAttributeId)
	{
		return Soloud_getFilterParameter(objhandle, aVoiceHandle, aFilterId, aAttributeId);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_fadeFilterParameter(IntPtr aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aTo, double aTime);
	public void fadeFilterParameter(uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aTo, double aTime)
	{
		Soloud_fadeFilterParameter(objhandle, aVoiceHandle, aFilterId, aAttributeId, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_oscillateFilterParameter(IntPtr aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aFrom, float aTo, double aTime);
	public void oscillateFilterParameter(uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aFrom, float aTo, double aTime)
	{
		Soloud_oscillateFilterParameter(objhandle, aVoiceHandle, aFilterId, aAttributeId, aFrom, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern double Soloud_getStreamTime(IntPtr aObjHandle, uint aVoiceHandle);
	public double getStreamTime(uint aVoiceHandle)
	{
		return Soloud_getStreamTime(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_getPause(IntPtr aObjHandle, uint aVoiceHandle);
	public int getPause(uint aVoiceHandle)
	{
		return Soloud_getPause(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern float Soloud_getVolume(IntPtr aObjHandle, uint aVoiceHandle);
	public float getVolume(uint aVoiceHandle)
	{
		return Soloud_getVolume(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern float Soloud_getPan(IntPtr aObjHandle, uint aVoiceHandle);
	public float getPan(uint aVoiceHandle)
	{
		return Soloud_getPan(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern float Soloud_getSamplerate(IntPtr aObjHandle, uint aVoiceHandle);
	public float getSamplerate(uint aVoiceHandle)
	{
		return Soloud_getSamplerate(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_getProtectVoice(IntPtr aObjHandle, uint aVoiceHandle);
	public int getProtectVoice(uint aVoiceHandle)
	{
		return Soloud_getProtectVoice(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Soloud_getActiveVoiceCount(IntPtr aObjHandle);
	public uint getActiveVoiceCount()
	{
		return Soloud_getActiveVoiceCount(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_isValidVoiceHandle(IntPtr aObjHandle, uint aVoiceHandle);
	public int isValidVoiceHandle(uint aVoiceHandle)
	{
		return Soloud_isValidVoiceHandle(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern float Soloud_getRelativePlaySpeed(IntPtr aObjHandle, uint aVoiceHandle);
	public float getRelativePlaySpeed(uint aVoiceHandle)
	{
		return Soloud_getRelativePlaySpeed(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern float Soloud_getPostClipScaler(IntPtr aObjHandle);
	public float getPostClipScaler()
	{
		return Soloud_getPostClipScaler(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern float Soloud_getGlobalVolume(IntPtr aObjHandle);
	public float getGlobalVolume()
	{
		return Soloud_getGlobalVolume(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setGlobalVolume(IntPtr aObjHandle, float aVolume);
	public void setGlobalVolume(float aVolume)
	{
		Soloud_setGlobalVolume(objhandle, aVolume);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setPostClipScaler(IntPtr aObjHandle, float aScaler);
	public void setPostClipScaler(float aScaler)
	{
		Soloud_setPostClipScaler(objhandle, aScaler);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setPause(IntPtr aObjHandle, uint aVoiceHandle, int aPause);
	public void setPause(uint aVoiceHandle, int aPause)
	{
		Soloud_setPause(objhandle, aVoiceHandle, aPause);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setPauseAll(IntPtr aObjHandle, int aPause);
	public void setPauseAll(int aPause)
	{
		Soloud_setPauseAll(objhandle, aPause);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setRelativePlaySpeed(IntPtr aObjHandle, uint aVoiceHandle, float aSpeed);
	public void setRelativePlaySpeed(uint aVoiceHandle, float aSpeed)
	{
		Soloud_setRelativePlaySpeed(objhandle, aVoiceHandle, aSpeed);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setProtectVoice(IntPtr aObjHandle, uint aVoiceHandle, int aProtect);
	public void setProtectVoice(uint aVoiceHandle, int aProtect)
	{
		Soloud_setProtectVoice(objhandle, aVoiceHandle, aProtect);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setSamplerate(IntPtr aObjHandle, uint aVoiceHandle, float aSamplerate);
	public void setSamplerate(uint aVoiceHandle, float aSamplerate)
	{
		Soloud_setSamplerate(objhandle, aVoiceHandle, aSamplerate);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setPan(IntPtr aObjHandle, uint aVoiceHandle, float aPan);
	public void setPan(uint aVoiceHandle, float aPan)
	{
		Soloud_setPan(objhandle, aVoiceHandle, aPan);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setPanAbsolute(IntPtr aObjHandle, uint aVoiceHandle, float aLVolume, float aRVolume);
	public void setPanAbsolute(uint aVoiceHandle, float aLVolume, float aRVolume)
	{
		Soloud_setPanAbsolute(objhandle, aVoiceHandle, aLVolume, aRVolume);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setVolume(IntPtr aObjHandle, uint aVoiceHandle, float aVolume);
	public void setVolume(uint aVoiceHandle, float aVolume)
	{
		Soloud_setVolume(objhandle, aVoiceHandle, aVolume);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setDelaySamples(IntPtr aObjHandle, uint aVoiceHandle, uint aSamples);
	public void setDelaySamples(uint aVoiceHandle, uint aSamples)
	{
		Soloud_setDelaySamples(objhandle, aVoiceHandle, aSamples);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_fadeVolume(IntPtr aObjHandle, uint aVoiceHandle, float aTo, double aTime);
	public void fadeVolume(uint aVoiceHandle, float aTo, double aTime)
	{
		Soloud_fadeVolume(objhandle, aVoiceHandle, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_fadePan(IntPtr aObjHandle, uint aVoiceHandle, float aTo, double aTime);
	public void fadePan(uint aVoiceHandle, float aTo, double aTime)
	{
		Soloud_fadePan(objhandle, aVoiceHandle, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_fadeRelativePlaySpeed(IntPtr aObjHandle, uint aVoiceHandle, float aTo, double aTime);
	public void fadeRelativePlaySpeed(uint aVoiceHandle, float aTo, double aTime)
	{
		Soloud_fadeRelativePlaySpeed(objhandle, aVoiceHandle, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_fadeGlobalVolume(IntPtr aObjHandle, float aTo, double aTime);
	public void fadeGlobalVolume(float aTo, double aTime)
	{
		Soloud_fadeGlobalVolume(objhandle, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_schedulePause(IntPtr aObjHandle, uint aVoiceHandle, double aTime);
	public void schedulePause(uint aVoiceHandle, double aTime)
	{
		Soloud_schedulePause(objhandle, aVoiceHandle, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_scheduleStop(IntPtr aObjHandle, uint aVoiceHandle, double aTime);
	public void scheduleStop(uint aVoiceHandle, double aTime)
	{
		Soloud_scheduleStop(objhandle, aVoiceHandle, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_oscillateVolume(IntPtr aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime);
	public void oscillateVolume(uint aVoiceHandle, float aFrom, float aTo, double aTime)
	{
		Soloud_oscillateVolume(objhandle, aVoiceHandle, aFrom, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_oscillatePan(IntPtr aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime);
	public void oscillatePan(uint aVoiceHandle, float aFrom, float aTo, double aTime)
	{
		Soloud_oscillatePan(objhandle, aVoiceHandle, aFrom, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_oscillateRelativePlaySpeed(IntPtr aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime);
	public void oscillateRelativePlaySpeed(uint aVoiceHandle, float aFrom, float aTo, double aTime)
	{
		Soloud_oscillateRelativePlaySpeed(objhandle, aVoiceHandle, aFrom, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_oscillateGlobalVolume(IntPtr aObjHandle, float aFrom, float aTo, double aTime);
	public void oscillateGlobalVolume(float aFrom, float aTo, double aTime)
	{
		Soloud_oscillateGlobalVolume(objhandle, aFrom, aTo, aTime);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setGlobalFilter(IntPtr aObjHandle, uint aFilterId, IntPtr aFilter);
	public void setGlobalFilter(uint aFilterId, SoloudObject aFilter)
	{
		Soloud_setGlobalFilter(objhandle, aFilterId, aFilter.objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_setVisualizationEnable(IntPtr aObjHandle, int aEnable);
	public void setVisualizationEnable(int aEnable)
	{
		Soloud_setVisualizationEnable(objhandle, aEnable);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Soloud_calcFFT(IntPtr aObjHandle);
	public float[] calcFFT()
	{
		float[] ret = new float[256];
		IntPtr p = Soloud_calcFFT(objhandle);

		byte[] buffer = new byte[4];
		for (int i = 0; i < ret.Length; ++i)
		{
			int f_bits = Marshal.ReadInt32(p, i * 4);
			buffer[0] = (byte)((f_bits >> 0) & 0xff);
			buffer[1] = (byte)((f_bits >> 8) & 0xff);
			buffer[2] = (byte)((f_bits >> 16) & 0xff);
			buffer[3] = (byte)((f_bits >> 24) & 0xff);
			ret[i] = BitConverter.ToSingle(buffer, 0);
		}
		return ret;
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Soloud_getWave(IntPtr aObjHandle);
	public float[] getWave()
	{
		float[] ret = new float[256];
		IntPtr p = Soloud_getWave(objhandle);

		byte[] buffer = new byte[4];
		for (int i = 0; i < ret.Length; ++i)
		{
			int f_bits = Marshal.ReadInt32(p, i * 4);
			buffer[0] = (byte)((f_bits >> 0) & 0xff);
			buffer[1] = (byte)((f_bits >> 8) & 0xff);
			buffer[2] = (byte)((f_bits >> 16) & 0xff);
			buffer[3] = (byte)((f_bits >> 24) & 0xff);
			ret[i] = BitConverter.ToSingle(buffer, 0);
		}
		return ret;
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Soloud_getLoopCount(IntPtr aObjHandle, uint aVoiceHandle);
	public uint getLoopCount(uint aVoiceHandle)
	{
		return Soloud_getLoopCount(objhandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Soloud_createVoiceGroup(IntPtr aObjHandle);
	public uint createVoiceGroup()
	{
		return Soloud_createVoiceGroup(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_destroyVoiceGroup(IntPtr aObjHandle, uint aVoiceGroupHandle);
	public int destroyVoiceGroup(uint aVoiceGroupHandle)
	{
		return Soloud_destroyVoiceGroup(objhandle, aVoiceGroupHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_addVoiceToGroup(IntPtr aObjHandle, uint aVoiceGroupHandle, uint aVoiceHandle);
	public int addVoiceToGroup(uint aVoiceGroupHandle, uint aVoiceHandle)
	{
		return Soloud_addVoiceToGroup(objhandle, aVoiceGroupHandle, aVoiceHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_isVoiceGroup(IntPtr aObjHandle, uint aVoiceGroupHandle);
	public int isVoiceGroup(uint aVoiceGroupHandle)
	{
		return Soloud_isVoiceGroup(objhandle, aVoiceGroupHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_isVoiceGroupEmpty(IntPtr aObjHandle, uint aVoiceGroupHandle);
	public int isVoiceGroupEmpty(uint aVoiceGroupHandle)
	{
		return Soloud_isVoiceGroupEmpty(objhandle, aVoiceGroupHandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_update3dAudio(IntPtr aObjHandle);
	public void update3dAudio()
	{
		Soloud_update3dAudio(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Soloud_set3dSoundSpeed(IntPtr aObjHandle, float aSpeed);
	public int set3dSoundSpeed(float aSpeed)
	{
		return Soloud_set3dSoundSpeed(objhandle, aSpeed);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern float Soloud_get3dSoundSpeed(IntPtr aObjHandle);
	public float get3dSoundSpeed()
	{
		return Soloud_get3dSoundSpeed(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dListenerParametersEx(IntPtr aObjHandle, float aPosX, float aPosY, float aPosZ, float aAtX, float aAtY, float aAtZ, float aUpX, float aUpY, float aUpZ, float aVelocityX, float aVelocityY, float aVelocityZ);
	public void set3dListenerParameters(float aPosX, float aPosY, float aPosZ, float aAtX, float aAtY, float aAtZ, float aUpX, float aUpY, float aUpZ, float aVelocityX = 0.0f, float aVelocityY = 0.0f, float aVelocityZ = 0.0f)
	{
		Soloud_set3dListenerParametersEx(objhandle, aPosX, aPosY, aPosZ, aAtX, aAtY, aAtZ, aUpX, aUpY, aUpZ, aVelocityX, aVelocityY, aVelocityZ);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dListenerPosition(IntPtr aObjHandle, float aPosX, float aPosY, float aPosZ);
	public void set3dListenerPosition(float aPosX, float aPosY, float aPosZ)
	{
		Soloud_set3dListenerPosition(objhandle, aPosX, aPosY, aPosZ);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dListenerAt(IntPtr aObjHandle, float aAtX, float aAtY, float aAtZ);
	public void set3dListenerAt(float aAtX, float aAtY, float aAtZ)
	{
		Soloud_set3dListenerAt(objhandle, aAtX, aAtY, aAtZ);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dListenerUp(IntPtr aObjHandle, float aUpX, float aUpY, float aUpZ);
	public void set3dListenerUp(float aUpX, float aUpY, float aUpZ)
	{
		Soloud_set3dListenerUp(objhandle, aUpX, aUpY, aUpZ);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dListenerVelocity(IntPtr aObjHandle, float aVelocityX, float aVelocityY, float aVelocityZ);
	public void set3dListenerVelocity(float aVelocityX, float aVelocityY, float aVelocityZ)
	{
		Soloud_set3dListenerVelocity(objhandle, aVelocityX, aVelocityY, aVelocityZ);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dSourceParametersEx(IntPtr aObjHandle, uint aVoiceHandle, float aPosX, float aPosY, float aPosZ, float aVelocityX, float aVelocityY, float aVelocityZ);
	public void set3dSourceParameters(uint aVoiceHandle, float aPosX, float aPosY, float aPosZ, float aVelocityX = 0.0f, float aVelocityY = 0.0f, float aVelocityZ = 0.0f)
	{
		Soloud_set3dSourceParametersEx(objhandle, aVoiceHandle, aPosX, aPosY, aPosZ, aVelocityX, aVelocityY, aVelocityZ);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dSourcePosition(IntPtr aObjHandle, uint aVoiceHandle, float aPosX, float aPosY, float aPosZ);
	public void set3dSourcePosition(uint aVoiceHandle, float aPosX, float aPosY, float aPosZ)
	{
		Soloud_set3dSourcePosition(objhandle, aVoiceHandle, aPosX, aPosY, aPosZ);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dSourceVelocity(IntPtr aObjHandle, uint aVoiceHandle, float aVelocityX, float aVelocityY, float aVelocityZ);
	public void set3dSourceVelocity(uint aVoiceHandle, float aVelocityX, float aVelocityY, float aVelocityZ)
	{
		Soloud_set3dSourceVelocity(objhandle, aVoiceHandle, aVelocityX, aVelocityY, aVelocityZ);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dSourceMinMaxDistance(IntPtr aObjHandle, uint aVoiceHandle, float aMinDistance, float aMaxDistance);
	public void set3dSourceMinMaxDistance(uint aVoiceHandle, float aMinDistance, float aMaxDistance)
	{
		Soloud_set3dSourceMinMaxDistance(objhandle, aVoiceHandle, aMinDistance, aMaxDistance);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dSourceAttenuation(IntPtr aObjHandle, uint aVoiceHandle, uint aAttenuationModel, float aAttenuationRolloffFactor);
	public void set3dSourceAttenuation(uint aVoiceHandle, uint aAttenuationModel, float aAttenuationRolloffFactor)
	{
		Soloud_set3dSourceAttenuation(objhandle, aVoiceHandle, aAttenuationModel, aAttenuationRolloffFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Soloud_set3dSourceDopplerFactor(IntPtr aObjHandle, uint aVoiceHandle, float aDopplerFactor);
	public void set3dSourceDopplerFactor(uint aVoiceHandle, float aDopplerFactor)
	{
		Soloud_set3dSourceDopplerFactor(objhandle, aVoiceHandle, aDopplerFactor);
	}
}

public class BiquadResonantFilter : SoloudObject
{
	public const int NONE = 0;
	public const int HIGHPASS = 2;
	public const int WET = 0;
	public const int LOWPASS = 1;
	public const int SAMPLERATE = 1;
	public const int BANDPASS = 3;
	public const int FREQUENCY = 2;
	public const int RESONANCE = 3;

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr BiquadResonantFilter_create();
	public BiquadResonantFilter()
	{
		objhandle = BiquadResonantFilter_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr BiquadResonantFilter_destroy(IntPtr aObjHandle);
	~BiquadResonantFilter()
	{
		BiquadResonantFilter_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int BiquadResonantFilter_setParams(IntPtr aObjHandle, int aType, float aSampleRate, float aFrequency, float aResonance);
	public int setParams(int aType, float aSampleRate, float aFrequency, float aResonance)
	{
		return BiquadResonantFilter_setParams(objhandle, aType, aSampleRate, aFrequency, aResonance);
	}
}

public class Bus : SoloudObject
{

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Bus_create();
	public Bus()
	{
		objhandle = Bus_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Bus_destroy(IntPtr aObjHandle);
	~Bus()
	{
		Bus_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_setFilter(IntPtr aObjHandle, uint aFilterId, IntPtr aFilter);
	public void setFilter(uint aFilterId, SoloudObject aFilter)
	{
		Bus_setFilter(objhandle, aFilterId, aFilter.objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Bus_playEx(IntPtr aObjHandle, IntPtr aSound, float aVolume, float aPan, int aPaused);
	public uint play(SoloudObject aSound, float aVolume = 1.0f, float aPan = 0.0f, int aPaused = 0)
	{
		return Bus_playEx(objhandle, aSound.objhandle, aVolume, aPan, aPaused);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Bus_playClockedEx(IntPtr aObjHandle, double aSoundTime, IntPtr aSound, float aVolume, float aPan);
	public uint playClocked(double aSoundTime, SoloudObject aSound, float aVolume = 1.0f, float aPan = 0.0f)
	{
		return Bus_playClockedEx(objhandle, aSoundTime, aSound.objhandle, aVolume, aPan);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Bus_play3dEx(IntPtr aObjHandle, IntPtr aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, int aPaused);
	public uint play3d(SoloudObject aSound, float aPosX, float aPosY, float aPosZ, float aVelX = 0.0f, float aVelY = 0.0f, float aVelZ = 0.0f, float aVolume = 1.0f, int aPaused = 0)
	{
		return Bus_play3dEx(objhandle, aSound.objhandle, aPosX, aPosY, aPosZ, aVelX, aVelY, aVelZ, aVolume, aPaused);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Bus_play3dClockedEx(IntPtr aObjHandle, double aSoundTime, IntPtr aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume);
	public uint play3dClocked(double aSoundTime, SoloudObject aSound, float aPosX, float aPosY, float aPosZ, float aVelX = 0.0f, float aVelY = 0.0f, float aVelZ = 0.0f, float aVolume = 1.0f)
	{
		return Bus_play3dClockedEx(objhandle, aSoundTime, aSound.objhandle, aPosX, aPosY, aPosZ, aVelX, aVelY, aVelZ, aVolume);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_setVisualizationEnable(IntPtr aObjHandle, int aEnable);
	public void setVisualizationEnable(int aEnable)
	{
		Bus_setVisualizationEnable(objhandle, aEnable);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Bus_calcFFT(IntPtr aObjHandle);
	public float[] calcFFT()
	{
		float[] ret = new float[256];
		IntPtr p = Bus_calcFFT(objhandle);

		byte[] buffer = new byte[4];
		for (int i = 0; i < ret.Length; ++i)
		{
			int f_bits = Marshal.ReadInt32(p, i * 4);
			buffer[0] = (byte)((f_bits >> 0) & 0xff);
			buffer[1] = (byte)((f_bits >> 8) & 0xff);
			buffer[2] = (byte)((f_bits >> 16) & 0xff);
			buffer[3] = (byte)((f_bits >> 24) & 0xff);
			ret[i] = BitConverter.ToSingle(buffer, 0);
		}
		return ret;
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Bus_getWave(IntPtr aObjHandle);
	public float[] getWave()
	{
		float[] ret = new float[256];
		IntPtr p = Bus_getWave(objhandle);

		byte[] buffer = new byte[4];
		for (int i = 0; i < ret.Length; ++i)
		{
			int f_bits = Marshal.ReadInt32(p, i * 4);
			buffer[0] = (byte)((f_bits >> 0) & 0xff);
			buffer[1] = (byte)((f_bits >> 8) & 0xff);
			buffer[2] = (byte)((f_bits >> 16) & 0xff);
			buffer[3] = (byte)((f_bits >> 24) & 0xff);
			ret[i] = BitConverter.ToSingle(buffer, 0);
		}
		return ret;
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_setLooping(IntPtr aObjHandle, int aLoop);
	public void setLooping(int aLoop)
	{
		Bus_setLooping(objhandle, aLoop);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_set3dMinMaxDistance(IntPtr aObjHandle, float aMinDistance, float aMaxDistance);
	public void set3dMinMaxDistance(float aMinDistance, float aMaxDistance)
	{
		Bus_set3dMinMaxDistance(objhandle, aMinDistance, aMaxDistance);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_set3dAttenuation(IntPtr aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor);
	public void set3dAttenuation(uint aAttenuationModel, float aAttenuationRolloffFactor)
	{
		Bus_set3dAttenuation(objhandle, aAttenuationModel, aAttenuationRolloffFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_set3dDopplerFactor(IntPtr aObjHandle, float aDopplerFactor);
	public void set3dDopplerFactor(float aDopplerFactor)
	{
		Bus_set3dDopplerFactor(objhandle, aDopplerFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_set3dProcessing(IntPtr aObjHandle, int aDo3dProcessing);
	public void set3dProcessing(int aDo3dProcessing)
	{
		Bus_set3dProcessing(objhandle, aDo3dProcessing);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_set3dListenerRelative(IntPtr aObjHandle, int aListenerRelative);
	public void set3dListenerRelative(int aListenerRelative)
	{
		Bus_set3dListenerRelative(objhandle, aListenerRelative);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_set3dDistanceDelay(IntPtr aObjHandle, int aDistanceDelay);
	public void set3dDistanceDelay(int aDistanceDelay)
	{
		Bus_set3dDistanceDelay(objhandle, aDistanceDelay);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_set3dColliderEx(IntPtr aObjHandle, IntPtr aCollider, int aUserData);
	public void set3dCollider(SoloudObject aCollider, int aUserData = 0)
	{
		Bus_set3dColliderEx(objhandle, aCollider.objhandle, aUserData);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Bus_stop(IntPtr aObjHandle);
	public void stop()
	{
		Bus_stop(objhandle);
	}
}

public class EchoFilter : SoloudObject
{

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr EchoFilter_create();
	public EchoFilter()
	{
		objhandle = EchoFilter_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr EchoFilter_destroy(IntPtr aObjHandle);
	~EchoFilter()
	{
		EchoFilter_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int EchoFilter_setParamsEx(IntPtr aObjHandle, float aDelay, float aDecay, float aFilter);
	public int setParams(float aDelay, float aDecay = 0.7f, float aFilter = 0.0f)
	{
		return EchoFilter_setParamsEx(objhandle, aDelay, aDecay, aFilter);
	}
}

public class FFTFilter : SoloudObject
{
	public const int OVER = 0;
	public const int MULTIPLY = 2;
	public const int SUBTRACT = 1;

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr FFTFilter_create();
	public FFTFilter()
	{
		objhandle = FFTFilter_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr FFTFilter_destroy(IntPtr aObjHandle);
	~FFTFilter()
	{
		FFTFilter_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int FFTFilter_setParametersEx(IntPtr aObjHandle, int aShift, int aCombine, float aScale);
	public int setParameters(int aShift, int aCombine = 0, float aScale = 0.002f)
	{
		return FFTFilter_setParametersEx(objhandle, aShift, aCombine, aScale);
	}
}

public class FlangerFilter : SoloudObject
{
	public const int FREQ = 2;
	public const int WET = 0;
	public const int DELAY = 1;

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr FlangerFilter_create();
	public FlangerFilter()
	{
		objhandle = FlangerFilter_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr FlangerFilter_destroy(IntPtr aObjHandle);
	~FlangerFilter()
	{
		FlangerFilter_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int FlangerFilter_setParams(IntPtr aObjHandle, float aDelay, float aFreq);
	public int setParams(float aDelay, float aFreq)
	{
		return FlangerFilter_setParams(objhandle, aDelay, aFreq);
	}
}

public class LofiFilter : SoloudObject
{
	public const int BITDEPTH = 2;
	public const int WET = 0;
	public const int SAMPLERATE = 1;

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr LofiFilter_create();
	public LofiFilter()
	{
		objhandle = LofiFilter_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr LofiFilter_destroy(IntPtr aObjHandle);
	~LofiFilter()
	{
		LofiFilter_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int LofiFilter_setParams(IntPtr aObjHandle, float aSampleRate, float aBitdepth);
	public int setParams(float aSampleRate, float aBitdepth)
	{
		return LofiFilter_setParams(objhandle, aSampleRate, aBitdepth);
	}
}

public class Modplug : SoloudObject
{

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Modplug_create();
	public Modplug()
	{
		objhandle = Modplug_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Modplug_destroy(IntPtr aObjHandle);
	~Modplug()
	{
		Modplug_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Modplug_load(IntPtr aObjHandle, [MarshalAs(UnmanagedType.LPStr)] string aFilename);
	public int load(string aFilename)
	{
		return Modplug_load(objhandle, aFilename);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_setLooping(IntPtr aObjHandle, int aLoop);
	public void setLooping(int aLoop)
	{
		Modplug_setLooping(objhandle, aLoop);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_set3dMinMaxDistance(IntPtr aObjHandle, float aMinDistance, float aMaxDistance);
	public void set3dMinMaxDistance(float aMinDistance, float aMaxDistance)
	{
		Modplug_set3dMinMaxDistance(objhandle, aMinDistance, aMaxDistance);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_set3dAttenuation(IntPtr aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor);
	public void set3dAttenuation(uint aAttenuationModel, float aAttenuationRolloffFactor)
	{
		Modplug_set3dAttenuation(objhandle, aAttenuationModel, aAttenuationRolloffFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_set3dDopplerFactor(IntPtr aObjHandle, float aDopplerFactor);
	public void set3dDopplerFactor(float aDopplerFactor)
	{
		Modplug_set3dDopplerFactor(objhandle, aDopplerFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_set3dProcessing(IntPtr aObjHandle, int aDo3dProcessing);
	public void set3dProcessing(int aDo3dProcessing)
	{
		Modplug_set3dProcessing(objhandle, aDo3dProcessing);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_set3dListenerRelative(IntPtr aObjHandle, int aListenerRelative);
	public void set3dListenerRelative(int aListenerRelative)
	{
		Modplug_set3dListenerRelative(objhandle, aListenerRelative);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_set3dDistanceDelay(IntPtr aObjHandle, int aDistanceDelay);
	public void set3dDistanceDelay(int aDistanceDelay)
	{
		Modplug_set3dDistanceDelay(objhandle, aDistanceDelay);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_set3dColliderEx(IntPtr aObjHandle, IntPtr aCollider, int aUserData);
	public void set3dCollider(SoloudObject aCollider, int aUserData = 0)
	{
		Modplug_set3dColliderEx(objhandle, aCollider.objhandle, aUserData);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_setFilter(IntPtr aObjHandle, uint aFilterId, IntPtr aFilter);
	public void setFilter(uint aFilterId, SoloudObject aFilter)
	{
		Modplug_setFilter(objhandle, aFilterId, aFilter.objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Modplug_stop(IntPtr aObjHandle);
	public void stop()
	{
		Modplug_stop(objhandle);
	}
}

public class Prg : SoloudObject
{

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Prg_create();
	public Prg()
	{
		objhandle = Prg_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Prg_destroy(IntPtr aObjHandle);
	~Prg()
	{
		Prg_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern uint Prg_rand(IntPtr aObjHandle);
	public uint rand()
	{
		return Prg_rand(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Prg_srand(IntPtr aObjHandle, int aSeed);
	public void srand(int aSeed)
	{
		Prg_srand(objhandle, aSeed);
	}
}

public class Sfxr : SoloudObject
{
	public const int HURT = 4;
	public const int LASER = 1;
	public const int BLIP = 6;
	public const int JUMP = 5;
	public const int COIN = 0;
	public const int EXPLOSION = 2;
	public const int POWERUP = 3;

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Sfxr_create();
	public Sfxr()
	{
		objhandle = Sfxr_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Sfxr_destroy(IntPtr aObjHandle);
	~Sfxr()
	{
		Sfxr_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_resetParams(IntPtr aObjHandle);
	public void resetParams()
	{
		Sfxr_resetParams(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Sfxr_loadParams(IntPtr aObjHandle, [MarshalAs(UnmanagedType.LPStr)] string aFilename);
	public int loadParams(string aFilename)
	{
		return Sfxr_loadParams(objhandle, aFilename);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Sfxr_loadPreset(IntPtr aObjHandle, int aPresetNo, int aRandSeed);
	public int loadPreset(int aPresetNo, int aRandSeed)
	{
		return Sfxr_loadPreset(objhandle, aPresetNo, aRandSeed);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_setLooping(IntPtr aObjHandle, int aLoop);
	public void setLooping(int aLoop)
	{
		Sfxr_setLooping(objhandle, aLoop);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_set3dMinMaxDistance(IntPtr aObjHandle, float aMinDistance, float aMaxDistance);
	public void set3dMinMaxDistance(float aMinDistance, float aMaxDistance)
	{
		Sfxr_set3dMinMaxDistance(objhandle, aMinDistance, aMaxDistance);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_set3dAttenuation(IntPtr aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor);
	public void set3dAttenuation(uint aAttenuationModel, float aAttenuationRolloffFactor)
	{
		Sfxr_set3dAttenuation(objhandle, aAttenuationModel, aAttenuationRolloffFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_set3dDopplerFactor(IntPtr aObjHandle, float aDopplerFactor);
	public void set3dDopplerFactor(float aDopplerFactor)
	{
		Sfxr_set3dDopplerFactor(objhandle, aDopplerFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_set3dProcessing(IntPtr aObjHandle, int aDo3dProcessing);
	public void set3dProcessing(int aDo3dProcessing)
	{
		Sfxr_set3dProcessing(objhandle, aDo3dProcessing);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_set3dListenerRelative(IntPtr aObjHandle, int aListenerRelative);
	public void set3dListenerRelative(int aListenerRelative)
	{
		Sfxr_set3dListenerRelative(objhandle, aListenerRelative);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_set3dDistanceDelay(IntPtr aObjHandle, int aDistanceDelay);
	public void set3dDistanceDelay(int aDistanceDelay)
	{
		Sfxr_set3dDistanceDelay(objhandle, aDistanceDelay);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_set3dColliderEx(IntPtr aObjHandle, IntPtr aCollider, int aUserData);
	public void set3dCollider(SoloudObject aCollider, int aUserData = 0)
	{
		Sfxr_set3dColliderEx(objhandle, aCollider.objhandle, aUserData);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_setFilter(IntPtr aObjHandle, uint aFilterId, IntPtr aFilter);
	public void setFilter(uint aFilterId, SoloudObject aFilter)
	{
		Sfxr_setFilter(objhandle, aFilterId, aFilter.objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Sfxr_stop(IntPtr aObjHandle);
	public void stop()
	{
		Sfxr_stop(objhandle);
	}
}

public class Speech : SoloudObject
{

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Speech_create();
	public Speech()
	{
		objhandle = Speech_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Speech_destroy(IntPtr aObjHandle);
	~Speech()
	{
		Speech_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Speech_setText(IntPtr aObjHandle, [MarshalAs(UnmanagedType.LPStr)] string aText);
	public int setText(string aText)
	{
		return Speech_setText(objhandle, aText);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_setLooping(IntPtr aObjHandle, int aLoop);
	public void setLooping(int aLoop)
	{
		Speech_setLooping(objhandle, aLoop);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_set3dMinMaxDistance(IntPtr aObjHandle, float aMinDistance, float aMaxDistance);
	public void set3dMinMaxDistance(float aMinDistance, float aMaxDistance)
	{
		Speech_set3dMinMaxDistance(objhandle, aMinDistance, aMaxDistance);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_set3dAttenuation(IntPtr aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor);
	public void set3dAttenuation(uint aAttenuationModel, float aAttenuationRolloffFactor)
	{
		Speech_set3dAttenuation(objhandle, aAttenuationModel, aAttenuationRolloffFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_set3dDopplerFactor(IntPtr aObjHandle, float aDopplerFactor);
	public void set3dDopplerFactor(float aDopplerFactor)
	{
		Speech_set3dDopplerFactor(objhandle, aDopplerFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_set3dProcessing(IntPtr aObjHandle, int aDo3dProcessing);
	public void set3dProcessing(int aDo3dProcessing)
	{
		Speech_set3dProcessing(objhandle, aDo3dProcessing);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_set3dListenerRelative(IntPtr aObjHandle, int aListenerRelative);
	public void set3dListenerRelative(int aListenerRelative)
	{
		Speech_set3dListenerRelative(objhandle, aListenerRelative);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_set3dDistanceDelay(IntPtr aObjHandle, int aDistanceDelay);
	public void set3dDistanceDelay(int aDistanceDelay)
	{
		Speech_set3dDistanceDelay(objhandle, aDistanceDelay);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_set3dColliderEx(IntPtr aObjHandle, IntPtr aCollider, int aUserData);
	public void set3dCollider(SoloudObject aCollider, int aUserData = 0)
	{
		Speech_set3dColliderEx(objhandle, aCollider.objhandle, aUserData);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_setFilter(IntPtr aObjHandle, uint aFilterId, IntPtr aFilter);
	public void setFilter(uint aFilterId, SoloudObject aFilter)
	{
		Speech_setFilter(objhandle, aFilterId, aFilter.objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Speech_stop(IntPtr aObjHandle);
	public void stop()
	{
		Speech_stop(objhandle);
	}
}

public class Wav : SoloudObject
{

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Wav_create();
	public Wav()
	{
		objhandle = Wav_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr Wav_destroy(IntPtr aObjHandle);
	~Wav()
	{
		Wav_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Wav_load(IntPtr aObjHandle, [MarshalAs(UnmanagedType.LPStr)] string aFilename);
	public int load(string aFilename)
	{
		return Wav_load(objhandle, aFilename);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int Wav_loadMem(IntPtr aObjHandle, IntPtr aMem, uint aLength);
	public int loadMem(IntPtr aMem, uint aLength)
	{
		return Wav_loadMem(objhandle, aMem, aLength);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern double Wav_getLength(IntPtr aObjHandle);
	public double getLength()
	{
		return Wav_getLength(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_setLooping(IntPtr aObjHandle, int aLoop);
	public void setLooping(int aLoop)
	{
		Wav_setLooping(objhandle, aLoop);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_set3dMinMaxDistance(IntPtr aObjHandle, float aMinDistance, float aMaxDistance);
	public void set3dMinMaxDistance(float aMinDistance, float aMaxDistance)
	{
		Wav_set3dMinMaxDistance(objhandle, aMinDistance, aMaxDistance);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_set3dAttenuation(IntPtr aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor);
	public void set3dAttenuation(uint aAttenuationModel, float aAttenuationRolloffFactor)
	{
		Wav_set3dAttenuation(objhandle, aAttenuationModel, aAttenuationRolloffFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_set3dDopplerFactor(IntPtr aObjHandle, float aDopplerFactor);
	public void set3dDopplerFactor(float aDopplerFactor)
	{
		Wav_set3dDopplerFactor(objhandle, aDopplerFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_set3dProcessing(IntPtr aObjHandle, int aDo3dProcessing);
	public void set3dProcessing(int aDo3dProcessing)
	{
		Wav_set3dProcessing(objhandle, aDo3dProcessing);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_set3dListenerRelative(IntPtr aObjHandle, int aListenerRelative);
	public void set3dListenerRelative(int aListenerRelative)
	{
		Wav_set3dListenerRelative(objhandle, aListenerRelative);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_set3dDistanceDelay(IntPtr aObjHandle, int aDistanceDelay);
	public void set3dDistanceDelay(int aDistanceDelay)
	{
		Wav_set3dDistanceDelay(objhandle, aDistanceDelay);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_set3dColliderEx(IntPtr aObjHandle, IntPtr aCollider, int aUserData);
	public void set3dCollider(SoloudObject aCollider, int aUserData = 0)
	{
		Wav_set3dColliderEx(objhandle, aCollider.objhandle, aUserData);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_setFilter(IntPtr aObjHandle, uint aFilterId, IntPtr aFilter);
	public void setFilter(uint aFilterId, SoloudObject aFilter)
	{
		Wav_setFilter(objhandle, aFilterId, aFilter.objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void Wav_stop(IntPtr aObjHandle);
	public void stop()
	{
		Wav_stop(objhandle);
	}
}

public class WavStream : SoloudObject
{

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr WavStream_create();
	public WavStream()
	{
		objhandle = WavStream_create();
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern IntPtr WavStream_destroy(IntPtr aObjHandle);
	~WavStream()
	{
		WavStream_destroy(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern int WavStream_load(IntPtr aObjHandle, [MarshalAs(UnmanagedType.LPStr)] string aFilename);
	public int load(string aFilename)
	{
		return WavStream_load(objhandle, aFilename);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern double WavStream_getLength(IntPtr aObjHandle);
	public double getLength()
	{
		return WavStream_getLength(objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_setLooping(IntPtr aObjHandle, int aLoop);
	public void setLooping(int aLoop)
	{
		WavStream_setLooping(objhandle, aLoop);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_set3dMinMaxDistance(IntPtr aObjHandle, float aMinDistance, float aMaxDistance);
	public void set3dMinMaxDistance(float aMinDistance, float aMaxDistance)
	{
		WavStream_set3dMinMaxDistance(objhandle, aMinDistance, aMaxDistance);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_set3dAttenuation(IntPtr aObjHandle, uint aAttenuationModel, float aAttenuationRolloffFactor);
	public void set3dAttenuation(uint aAttenuationModel, float aAttenuationRolloffFactor)
	{
		WavStream_set3dAttenuation(objhandle, aAttenuationModel, aAttenuationRolloffFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_set3dDopplerFactor(IntPtr aObjHandle, float aDopplerFactor);
	public void set3dDopplerFactor(float aDopplerFactor)
	{
		WavStream_set3dDopplerFactor(objhandle, aDopplerFactor);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_set3dProcessing(IntPtr aObjHandle, int aDo3dProcessing);
	public void set3dProcessing(int aDo3dProcessing)
	{
		WavStream_set3dProcessing(objhandle, aDo3dProcessing);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_set3dListenerRelative(IntPtr aObjHandle, int aListenerRelative);
	public void set3dListenerRelative(int aListenerRelative)
	{
		WavStream_set3dListenerRelative(objhandle, aListenerRelative);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_set3dDistanceDelay(IntPtr aObjHandle, int aDistanceDelay);
	public void set3dDistanceDelay(int aDistanceDelay)
	{
		WavStream_set3dDistanceDelay(objhandle, aDistanceDelay);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_set3dColliderEx(IntPtr aObjHandle, IntPtr aCollider, int aUserData);
	public void set3dCollider(SoloudObject aCollider, int aUserData = 0)
	{
		WavStream_set3dColliderEx(objhandle, aCollider.objhandle, aUserData);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_setFilter(IntPtr aObjHandle, uint aFilterId, IntPtr aFilter);
	public void setFilter(uint aFilterId, SoloudObject aFilter)
	{
		WavStream_setFilter(objhandle, aFilterId, aFilter.objhandle);
	}

	[DllImport("soloud_x86.dll", CallingConvention = CallingConvention.Cdecl)]
	internal static extern void WavStream_stop(IntPtr aObjHandle);
	public void stop()
	{
		WavStream_stop(objhandle);
	}
}
}
